name: MLOps CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt # This will install flake8 and pytest

      - name: Set up DVC and Pull Data from GCS
        run: |
          echo "Authenticating to Google Cloud..."
          echo '${{ secrets.GCP_SA_KEY }}' > gcp_creds_ci.json
          export GOOGLE_APPLICATION_CREDENTIALS=./gcp_creds_ci.json
          
          echo "DVC setup: Using GCS remote (should be default from .dvc/config)."
          
          echo "Pulling DVC tracked data from GCS..."
          dvc pull data/raw/reviews.csv 
          
          echo "DVC data pull attempt finished."
          echo "Contents of data/raw after pull:"
          ls -lh data/raw/
          
          rm -f gcp_creds_ci.json

      - name: Reproduce DVC pipeline
        run: |
          echo "Attempting to reproduce DVC pipeline..."
          dvc repro -v
          echo "DVC pipeline reproduction attempt finished."

      - name: Lint with Flake8
        run: |
          echo "Running Flake8 linter on src/ directory..."
          flake8 src/
          # You could also add other directories like tests/ if desired:
          # echo "Running Flake8 linter on tests/ directory..."
          # flake8 tests/

      - name: Run Tests with Pytest
        run: |
          echo "Running Pytest..."
          pytest tests/ -v

    # --- Future Job: Build Docker Image (can be added later) ---
    # build_docker:
    #   needs: build_and_test
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout repository
    #       uses: actions/checkout@v4
    #
    #     - name: Set up DVC and Pull Models for Docker Build
    #       run: |
    #         echo "Authenticating to Google Cloud for Docker build..."
    #         echo '${{ secrets.GCP_SA_KEY }}' > gcp_creds_ci.json
    #         export GOOGLE_APPLICATION_CREDENTIALS=./gcp_creds_ci.json
    #         # Ensure dvc is available if not installed globally in the runner image for some reason
    #         # pip install dvc[gcs] # Usually covered by requirements.txt in previous job or image layer
    #         echo "Pulling models for Docker build..."
    #         # Ensure 'models/' directory exists for dvc pull to place files into
    #         mkdir -p models
    #         dvc pull models/sentiment_model.joblib models/tfidf_vectorizer.joblib -v
    #         echo "Models pulled."
    #         ls -lh models/
    #         rm -f gcp_creds_ci.json
    #
    #     - name: Set up Docker Buildx
    #       uses: docker/setup-buildx-action@v3
    #
    #     - name: Login to GitHub Container Registry (or Docker Hub)
    #       if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    #       uses: docker/login-action@v3
    #       with:
    #         registry: ghcr.io
    #         username: ${{ github.actor }}
    #         password: ${{ secrets.GITHUB_TOKEN }}
    #
    #     - name: Build and push Docker image
    #       id: docker_build
    #       uses: docker/build-push-action@v5
    #       with:
    #         context: .
    #         file: ./Dockerfile
    #         push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
    #         tags: ghcr.io/${{ github.repository_owner }}/sentiment-analysis-api:latest
    #         labels: |
    #           org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
    #           org.opencontainers.image.revision=${{ github.sha }}
    #
    #     - name: Echo image digest
    #       if: steps.docker_build.outputs.digest
    #       run: echo "Image digest: ${{ steps.docker_build.outputs.digest }}"