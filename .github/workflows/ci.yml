name: MLOps CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Assuming requirements.txt has 'dvc' and 'dvc-gs' listed separately,
          # or 'dvc[gcs]' which should be preferred.
          # If installing dvc and dvc-gs separately here:
          # pip install dvc dvc-gs # Add other deps from requirements.txt
          pip install -r requirements.txt # Ensure requirements.txt is updated

      - name: Set up DVC and Pull Data from GCS
        run: |
          echo "Authenticating to Google Cloud..."
          echo '${{ secrets.GCP_SA_KEY }}' > gcp_creds_ci.json
          export GOOGLE_APPLICATION_CREDENTIALS=./gcp_creds_ci.json
          echo "DVC setup: Using GCS remote."
          echo "Pulling DVC tracked data from GCS..."
          dvc pull data/raw/reviews.csv -v
          echo "DVC data pull attempt finished."
          ls -lh data/raw/
          rm -f gcp_creds_ci.json

      - name: Reproduce DVC pipeline
        run: |
          echo "Attempting to reproduce DVC pipeline..."
          dvc repro -v
          echo "DVC pipeline reproduction attempt finished."
          echo "Listing models directory after DVC repro:"
          ls -lh models/

      - name: Lint with Flake8
        run: |
          echo "Running Flake8 linter on src/ directory..."
          flake8 src/

      - name: Run Tests with Pytest
        run: |
          echo "Running Pytest..."
          pytest tests/ -v

  build_docker:
    name: Build and Push Docker Image
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python for Docker Build Job
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up DVC and Pull Models for Docker Build
        run: |
          python -m pip install --upgrade pip
          echo "Attempting to install dvc and dvc-gs separately using Python $(python --version)..."
          # Install DVC core and dvc-gs separately.
          # Ensure versions are compatible if you pin them.
          pip install dvc dvc-gs # Or specific versions like dvc==3.59.2 dvc-gs==X.Y.Z
          echo "Finished pip install dvc and dvc-gs."
          
          echo "Verifying dvc_gs import..."
          # The module DVC tries to import is typically 'dvc_gs' (underscore)
          python -c "import dvc_gs; print('dvc_gs imported successfully! Version:', getattr(dvc_gs, '__version__', 'unknown'))" || \
            (echo "Failed to import dvc_gs. Listing installed packages:" && pip list && exit 1)

          echo "Authenticating to Google Cloud for Docker build..."
          echo '${{ secrets.GCP_SA_KEY }}' > gcp_creds_ci.json
          export GOOGLE_APPLICATION_CREDENTIALS=./gcp_creds_ci.json
          
          echo "--- Running dvc version ---"
          dvc version

          echo "--- Running dvc doctor (to check cache setup) ---"
          dvc doctor || echo "dvc doctor reported issues"
          
          echo "Ensuring models directory exists for DVC operations..."
          mkdir -p models 

          echo "--- Attempting dvc fetch for specific model files ---"
          dvc fetch models/sentiment_model.joblib models/tfidf_vectorizer.joblib -v
          
          echo "--- Listing DVC cache contents after fetch ---"
          ls -l .dvc/cache/files/md5/ || echo "MD5 cache directory does not exist or is empty."
          find .dvc/cache -type f -print0 | xargs -0 ls -l | head -n 10 || echo "Cache is empty or find command failed."

          echo "--- Attempting dvc checkout for specific model files ---"
          dvc checkout models/sentiment_model.joblib models/tfidf_vectorizer.joblib -v

          echo "Models pull process finished. Listing models directory:"
          ls -lh models/
          rm -f gcp_creds_ci.json

      # ... (Rest of Docker build steps: Buildx, Login, Get Date, Build and Push, Image Digest) ...
      # (Make sure these steps are identical to the last working version you had for them)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "DATE=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image to GHCR
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_lower }}:latest,ghcr.io/${{ github.repository_lower }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.DATE }}

      - name: Image Digest
        run: echo "Pushed image with digest: ${{ steps.docker_build.outputs.digest }}"

# Ensure a final newline character below this line