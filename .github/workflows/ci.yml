name: MLOps CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up DVC and Pull Data from GCS
        run: |
          echo "Authenticating to Google Cloud..."
          echo '${{ secrets.GCP_SA_KEY }}' > gcp_creds_ci.json
          export GOOGLE_APPLICATION_CREDENTIALS=./gcp_creds_ci.json
          echo "DVC setup: Using GCS remote."
          echo "Pulling DVC tracked data from GCS..."
          dvc pull data/raw/reviews.csv -v
          echo "DVC data pull attempt finished."
          ls -lh data/raw/
          rm -f gcp_creds_ci.json

      - name: Reproduce DVC pipeline
        run: |
          echo "Attempting to reproduce DVC pipeline..."
          dvc repro -v
          echo "DVC pipeline reproduction attempt finished."
          echo "Listing models directory after DVC repro:"
          ls -lh models/

      - name: Lint with Flake8
        run: |
          echo "Running Flake8 linter on src/ directory..."
          flake8 src/

      - name: Run Tests with Pytest
        run: |
          echo "Running Pytest..."
          pytest tests/ -v

  build_docker:
    name: Build and Push Docker Image
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps: # Each item under steps must start with a hyphen '-'
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up DVC and Pull Models for Docker Build
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install "dvc[gcs]"
          
          echo "Authenticating to Google Cloud for Docker build..."
          echo '${{ secrets.GCP_SA_KEY }}' > gcp_creds_ci.json
          export GOOGLE_APPLICATION_CREDENTIALS=./gcp_creds_ci.json
          
          echo "Pulling models for Docker build..."
          mkdir -p models 
          dvc pull models/sentiment_model.joblib models/tfidf_vectorizer.joblib -v
          echo "Models pulled."
          ls -lh models/
          rm -f gcp_creds_ci.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date # STEP STARTS WITH '-'
        id: date               # Indented under the step
        run: echo "DATE=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT # Indented under the step

      - name: Build and push Docker image to GHCR # STEP STARTS WITH '-'
        id: docker_build                          # Indented under the step
        uses: docker/build-push-action@v5         # Indented under the step
        with:                                     # Indented under the step
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_lower }}:latest,ghcr.io/${{ github.repository_lower }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.DATE }}

      - name: Image Digest # STEP STARTS WITH '-'
        run: echo "Pushed image with digest: ${{ steps.docker_build.outputs.digest }}" # Indented